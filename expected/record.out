CREATE TYPE rec AS (i integer, t text);
CREATE FUNCTION scalar_to_record(i integer, t text) RETURNS rec AS
$$
	{ i: i, t: t }
$$
LANGUAGE plmruby;
SELECT scalar_to_record(1, 'a');
 scalar_to_record 
------------------
 (1,a)
(1 row)

CREATE FUNCTION record_to_text(x rec) RETURNS text AS
$$
	JSON.stringify(x)
$$
LANGUAGE plmruby;
SELECT record_to_text('(1,a)'::rec);
 record_to_text  
-----------------
 {"i":1,"t":"a"}
(1 row)

CREATE FUNCTION return_record(i integer, t text) RETURNS record AS
$$
	{ i: i, t: t }
$$
LANGUAGE plmruby;
SELECT * FROM return_record(1, 'a');
ERROR:  a column definition list is required for functions returning "record"
LINE 1: SELECT * FROM return_record(1, 'a');
                      ^
SELECT * FROM return_record(1, 'a') AS t(j integer, s text);
ERROR:  input of anonymous composite types is not implemented
SELECT * FROM return_record(1, 'a') AS t(x text, y text);
ERROR:  input of anonymous composite types is not implemented
DROP TYPE rec CASCADE;
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to function scalar_to_record(integer,text)
drop cascades to function record_to_text(rec)
